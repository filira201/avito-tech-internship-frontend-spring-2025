:root {
  --color-light: #ffffff;
  --color-dark: #050505;
  --color-light-dark: #1a1a1a;
  --color-gray: #cccccc;
  --color-dark-gray: #666666;
  --color-light-gray: #00000066;
  --color-red: #e70e0e;
  --color-accent-red: #c50c0c;
  --color-orange: #ffd166;
  --color-green: #06d6a0;
  --color-blue: #0582ff;
  --color-accent-blue: #045ac3;
  --color-light-blue: #ebf5fe;
  --color-accent-light-blue: #d6e1f5;

  --container-width: 1252px;
  --container-padding: 0px round(up, 7.22223%, 0.2rem);
  --container-gap: 20px;

  --card-minmax-width: 400px;
  --card-gap: 12px;
  --card-paragraph-line-height: 1.4;

  --header-width: 1400px;
  --header-padding-y: 15px;
  --header-padding-x: 16px;

  --section-gap: 28px;

  --separator-color: #0000001a;
  --separator-height: 1px;
  --separator-vertical-position: 0px;
  --separator-horizontal-position: 16px;

  --border-radius-md: 6px;
  --border-radius-lg: 8px;
  --border-radius-2xl: 16px;

  --font-size-3xl: 1.875rem;
  --font-size-2xl: 1.5rem;
  --font-size-xl: 1.25rem;
  --font-size-lg: 1.15rem;
  --font-size-base: 1rem;
  --font-size-xm: 0.9rem;
  --font-size-xs: 0.75rem;

  --transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --transition-duration: 0.2s;

  --box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);

  --layer-above-default: 10;
  --layer-modalTask: 100;
  --layer-loading: 200;

  --font-family-base: "Manrope", system-ui, sans-serif;
}

@font-face {
  font-family: "Manrope";
  src: url("/fonts/manrope/Manrope-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Manrope";
  src: url("/fonts/manrope/Manrope-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Manrope";
  src: url("/fonts/manrope/Manrope-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

#root {
  /* Для прижатия футера и шрифта */
  min-height: 100%;
  display: flex;
  flex-direction: column;
  color: var(--color-dark);
  background-color: var(--color-light);
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Убираем дефолтыне стили */
:where(a):where([class]) {
  color: inherit;
  text-decoration: none;
}

/**
     Убираем внутренние отступы слева тегам списков,
     у которых есть атрибут class
    */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
     Убираем внешние отступы body и двум другим тегам,
     у которых есть атрибут class
    */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
     Убираем внешние отступы вертикали нужным тегам,
     у которых есть атрибут class
    */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
     Убираем стандартный маркер маркированному списку,
     у которого есть атрибут class
    */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
     Обнуляем вертикальные внешние отступы параграфа,
     объявляем локальную переменную для внешнего отступа вниз,
     чтобы избежать взаимодействие с более сложным селектором
    */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
     Внешний отступ вниз для параграфа без атрибута class,
     который расположен не последним среди своих соседних элементов
    */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
     Упрощаем работу с изображениями и видео
    */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
     Наследуем свойства шрифт для полей ввода
    */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
       Пригодится в большинстве ситуаций
       (когда, например, нужно будет "прижать" футер к низу сайта)
      */
  height: 100%;
  /**
       Убираем скачок интерфейса по горизонтали
       при появлении / исчезновении скроллбара
      */
  scrollbar-gutter: stable;

  /* Добавил Шрифт и размер текста */
  font-family: var(--font-family-base);
  font-size: var(--font-size-base);
  /* Добавил Шрифт и размер текста */
}

/**
     Плавный скролл
    */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
       Пригодится в большинстве ситуаций
       (когда, например, нужно будет "прижать" футер к низу сайта)
      */

  /* Добавил, т.к. есть #root */
  height: 100%;
  /* Добавил, т.к. есть #root */

  min-height: 100%;
  /**
       Унифицированный интерлиньяж
      */
  line-height: 1.5;
}

/**
     Нормализация высоты элемента ссылки при его инспектировании в DevTools
    */
a:where([class]) {
  display: inline-flex;
}

/**
     Курсор-рука при наведении на элемент
    */
button,
label {
  cursor: pointer;
}

/**
     Приводим к единому цвету svg-элементы
     (за исключением тех, у которых уже указан
     атрибут fill со значением 'none' или начинается с 'url')
    */
:where([fill]:not([fill="none"], [fill^="url"])) {
  fill: currentColor;
}

/**
     Приводим к единому цвету svg-элементы
     (за исключением тех, у которых уже указан
     атрибут stroke со значением 'none')
    */
:where([stroke]:not([stroke="none"], [stroke^="url"])) {
  stroke: currentColor;
}

/**
     Чиним баг задержки смены цвета при взаимодействии с svg-элементами
    */
svg * {
  transition-property: fill, stroke;
}

/**
     Приведение рамок таблиц в классический 'collapse' вид
    */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
     Удаляем все анимации и переходы для людей,
     которые предпочитают их не использовать
    */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
